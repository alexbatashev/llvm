name: SYCL Windows Test

on:
  workflow_call:
    inputs:
      build_cache_suffix:
        type: string
        required: false
        default: "default"

jobs:
  build:
    name: Build
    runs-on: [Windows, build]
    # TODO use cached checkout
    steps:
    - uses: actions/checkout@v2
      with:
        path: src
        fetch-depth: 1
    - run: refreshenv
      shell: cmd
    - uses: ilammy/msvc-dev-cmd@9f8ae839b01883414208f29e3e24524387f48e1f
      with:
        arch: amd64
    - name: Set env
      shell: cmd
      run: |
        set PATH="C:\Program Files\Git\usr\bin";C:\ProgramData\chocolatey\lib\sccache\tools\sccache-v0.2.15-x86_64-pc-windows-msvc;C:\Python310;%PATH%
        echo "%PATH%" >> %GITHUB_PATH%
    - name: Build
      id: build
      shell: cmd
      # TODO switch to clang-cl and lld when this is fixed https://github.com/oneapi-src/level-zero/issues/83
      # TODO enable sccache, when problems with PDB are resolved
      run: |
        mkdir build
        mkdir install
        IF NOT EXIST D:\github\_work\cache MKDIR D:\github\_work\cache
        IF NOT EXIST D:\github\_work\cache\sycl_${{inputs.build_cache_suffix}} MKDIR D:\github\_work\cache\${{inputs.build_cache_suffix}}
        set SCCACHE_DIR=D:\github\_work\cache\${{ inputs.build_cache_suffix }}
        python.exe src/buildbot/configure.py -o build ^
          --cmake-opt="-DCMAKE_C_COMPILER=cl" ^
          --cmake-opt="-DCMAKE_CXX_COMPILER=cl" ^
          --cmake-opt="-DCMAKE_INSTALL_PREFIX=%GITHUB_WORKSPACE%\install" ^
          --cmake-opt="-DCMAKE_CXX_COMPILER_LAUNCHER=sccache" ^
          --cmake-opt="-DCMAKE_C_COMPILER_LAUNCHER=sccache"
        cmake --build build --target sycl-toolchain
        sccache --show-stats
    - name: check-llvm
      if: ${{ always() && !cancelled() && steps.build.outcome == 'success' }}
      shell: cmd
      run: |
        cmake --build %GITHUB_WORKSPACE%\build --target check-llvm
    - name: check-clang
      if: ${{ always() && !cancelled() && steps.build.outcome == 'success' }}
      shell: cmd
      run: |
        cmake --build %GITHUB_WORKSPACE%\build --target check-clang
    - name: check-sycl
      if: ${{ always() && !cancelled() && steps.build.outcome == 'success' }}
      shell: cmd
      run: |
        cmake --build %GITHUB_WORKSPACE%\build --target check-sycl
    - name: check-llvm-spirv
      if: ${{ always() && !cancelled() && steps.build.outcome == 'success' }}
      shell: cmd
      run: |
        cmake --build %GITHUB_WORKSPACE%\build --target check-llvm-spirv
    - name: check-xptifw
      if: ${{ always() && !cancelled() && steps.build.outcome == 'success' }}
      shell: cmd
      run: |
        cmake --build %GITHUB_WORKSPACE%\build --target check-xptifw
    - name: check-libclc
      if: ${{ always() && !cancelled() && steps.build.outcome == 'success' }}
      shell: cmd
      run: |
        cmake --build %GITHUB_WORKSPACE%\build --target check-libclc
    - name: Install
      shell: cmd
      run: cmake --build build --target deploy-sycl-toolchain
    - name: Upload toolchain
      uses: actions/upload-artifact@v2
      with:
        name: sycl_windows_default
        path: install/**/*
